var lib,popcorntime_remote={isConnected:!0,opt:{username:"popcorn",password:"popcorn",ip:"127.0.0.1",port:"8008",debug:!1},init:function(a,b){lib=this,a=lib.extend(lib.opt,a),lib.ping(b)},APIcall:function(a,b,c){request={},request.id=Math.floor(100*Math.random()+1),request.jsonrpc="2.0",request.method=a,request.params=b?b:[];var d=new XMLHttpRequest;d.open("POST","http://"+lib.opt.ip+":"+lib.opt.port,!0),d.setRequestHeader("Authorization",window.btoa(lib.opt.username+":"+lib.opt.password)),d.setRequestHeader("Accept","application/json;"),d.timeout=3e3,d.onreadystatechange=function(){4===this.readyState&&(4==this.readyState&&200==this.status?(data=JSON.parse(this.responseText),lib.handleData(data,a),c&&c(data)):(lib.log("Connection time out: can't reach popcorn time. Try changing the settings."),lib.isConnected="false"))},d.send(JSON.stringify(request)),d=null},handleData:function(a,b){"ping"==b&&void 0!=a.error&&(lib.log("Invalid login: Check username and password."),lib.isConnected=!1),lib.log(a)},log:function(a){1==lib.opt.debug&&console.log(a)},extend:function(a){a=a||{};for(var b=1;b<arguments.length;b++)if(arguments[b])for(var c in arguments[b])arguments[b].hasOwnProperty(c)&&(a[c]=arguments[b][c]);return a},ping:function(a){lib.APIcall("ping",!1,a)},enter:function(){lib.APIcall("enter")},back:function(){lib.APIcall("back")},getviewstack:function(a){lib.APIcall("getviewstack",!1,a)},getgenres:function(a){lib.APIcall("getgenres",!1,a)},getsorters:function(a){lib.APIcall("getsorters",!1,a)},gettypes:function(a){lib.APIcall("gettypes",!1,a)},getcurrenttab:function(a){lib.APIcall("getcurrenttab",!1,a)},getfullscreen:function(a){lib.APIcall("getfullscreen",!1,a)},getplayers:function(a){lib.APIcall("getplayers",!1,a)},startstream:function(a){lib.APIcall("startstream",a)},setplayer:function(a){lib.APIcall("setplayer",a)},listennotifications:function(a){lib.APIcall("listennotifications",!1,a)},nextseason:function(){lib.APIcall("nextseason")},previousseason:function(){lib.APIcall("previousseason")},selectepisode:function(a){lib.APIcall("selectepisode",a)},togglequality:function(){lib.APIcall("togglequality")},watchtrailer:function(){lib.APIcall("watchtrailer")},getselection:function(a,b){"function"==typeof a&&(b=a,a=!1),lib.APIcall("getselection",a,b)},getcurrentlist:function(a,b){"function"==typeof a&&(b=a,a=!1),lib.APIcall("getcurrentlist",a,b)},getsubtitles:function(a){lib.APIcall("getsubtitles",!1,a)},togglemute:function(){lib.APIcall("togglemute")},togglefullscreen:function(){lib.APIcall("togglefullscreen")},toggleplaying:function(){lib.APIcall("toggleplaying")},volume:function(a,b){"function"==typeof a&&(b=a,a=!1),lib.APIcall("volume",a,b)},getplaying:function(a){lib.APIcall("getplaying",!1,a)},seek:function(a){lib.APIcall("seek",a)},subtitleoffset:function(a){lib.APIcall("subtitleoffset",a)},setsubtitle:function(a){lib.APIcall("setsubtitle",a)},getstreamurl:function(a){lib.APIcall("getstreamurl",!1,a)},toggletab:function(){lib.APIcall("toggletab")},showslist:function(){lib.APIcall("showslist")},animelist:function(){lib.APIcall("animelist")},movieslist:function(){lib.APIcall("movieslist")},showwatchlist:function(){lib.APIcall("showwatchlist")},showfavourites:function(){lib.APIcall("showfavourites")},showabout:function(){lib.APIcall("showabout")},showsettings:function(){lib.APIcall("showsettings")},togglewatched:function(){lib.APIcall("togglewatched")},togglefavourite:function(){lib.APIcall("togglefavourite")},clearsearch:function(){lib.APIcall("clearsearch")},filtergenre:function(a){lib.APIcall("filtergenre",a)},filtersorter:function(a){lib.APIcall("filtersorter",a)},filtertype:function(a){lib.APIcall("filtertype",a)},filtersearch:function(a){lib.APIcall("filtersearch",a)},setselection:function(a){lib.APIcall("setselection",a)},up:function(){lib.APIcall("up")},down:function(){lib.APIcall("down")},right:function(){lib.APIcall("right")},left:function(){lib.APIcall("left")}};